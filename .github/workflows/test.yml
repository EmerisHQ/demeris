name: Unit & E2E

on:
  pull_request:
    types: [ready_for_review, synchronize, opened]
  push:
    branches:
      - develop

env:
  VUE_APP_EMERIS_MNEMONIC: ${{ secrets.VUE_APP_EMERIS_MNEMONIC }}
  DEFAULT_NODE_VERSION: 16.x

jobs:
  unit:
    runs-on: self-hosted

    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
  
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install (npm)
        run: npm install

      - name: Test
        run: npm run test:unit -- --runInBand

  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ env.DEFAULT_NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
          cache: npm

      - name: Install (npm)
        run: npm install

      - name: Build
        run: npm run build:production

      - name: Upload build dir
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ${{ github.workspace }}/dist

  e2e:
    runs-on: self-hosted
    needs: build

    strategy:
      fail-fast: false
      matrix:
        env_file: [false, .env.ci]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
          cache: npm
  
      - name: Update system
        run: sudo apt update

      - name: Install Serve
        run: npm install -g serve

      - name: Install dependencies
        run: sudo DEBIAN_FRONTEND=noninteractive apt -y install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

      - name: Download build dir
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: ${{ github.workspace }}/dist

      - name: Set env config
        id: vars
        if: ${{ matrix.env_file }}
        run: |
          ENV_URL_PARAMS=$(cat "${{ github.workspace }}/${{ matrix.env_file }}" | tr '\n' '&')
          ENV_CLI_PARAMS=$(cat "${{ github.workspace }}/${{ matrix.env_file }}" | tr '\n' ',')
          BASE_URL="http://localhost:8080?${ENV_URL_PARAMS}"
          echo ::set-output name=env-args::"${ENV_CLI_PARAMS}" 
          echo ::set-output name=cy-config::"baseUrl=${BASE_URL}"

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          config: ${{ steps.vars.outputs.cy-config  }}
          env: ${{ steps.vars.outputs.env-args }}
          start: serve -s dist -l 8080
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 180

      - name: Upload Screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.job }}-${{ matrix.env_file }}-screenshots
          path: cypress/screenshots
